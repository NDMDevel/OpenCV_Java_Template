/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package opencv_java_template;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import org.opencv.core.Mat;
import org.opencv.highgui.Highgui;

/**
 *
 * @author Damian
 */
public class TemplateTestWindow extends javax.swing.JFrame
{
    private Mat image;
    private final ArrayList<String> imagesName;
    //constructor por defecto
    public TemplateTestWindow() throws IOException
    {
        //Inicia la interface grafica. Debe llamarse primero
        initComponents();

        /*
            IconName contiene el nombre del icono de la aplicacion. 
            Los iconos disponibles se encuentran en el directorio IconsPNG
        */
        String IconName = "Smart2.png";
        Image img = ImageIO.read(getClass().getResource("IconsPNG/"+IconName));
        setIconImage(img);  //carga el icono en la aplicacion
        
        File dir = (new File("./"));
        String[] aux = dir.list();
        int i = 0; 
        int j = 0;
        imagesName = new ArrayList();
        while( i<aux.length  )
        {
            if( aux[i].length()>5 )
                if( aux[i].substring(aux[i].length()-4).equals(".jpg") )
                    imagesName.add(aux[i]);
            i++;
        }
        System.out.println("Images [*.jpg] found:");
        for( i = 0 ; i<imagesName.size() ; i++ )
        {
            ImageList.addItem(imagesName.get(i));
            System.out.println(((int)(i+1))+") "+imagesName.get(i));
        }
        ShowImageLabel.setText(null);
    }
    
    private BufferedImage toBufferedImage(Mat m)
    {
        int type = BufferedImage.TYPE_BYTE_GRAY;
        if( m.channels() > 1)
            type = BufferedImage.TYPE_3BYTE_BGR;
        int bufferSize = m.channels() * m.cols() * m.rows();
        byte[] b = new byte[bufferSize];
        m.get(0, 0, b); // get all the pixels
        BufferedImage aux_image = new BufferedImage(m.cols(), m.rows(), type);
        final byte[] targetPixels = ((DataBufferByte) aux_image.getRaster().getDataBuffer()).getData();
        System.arraycopy(b, 0, targetPixels, 0, b.length);
        return aux_image;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ShowImageBtn = new javax.swing.JButton();
        ImageList = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        ShowImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OpenCV_Java_Template");

        ShowImageBtn.setText("Show Image");
        ShowImageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowImageBtnActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(null);

        ShowImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ShowImageLabel.setText("jLabel1");
        jScrollPane1.setViewportView(ShowImageLabel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ShowImageBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ImageList, 0, 256, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ShowImageBtn)
                    .addComponent(ImageList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ShowImageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowImageBtnActionPerformed
        // TODO add your handling code here:
        image = Highgui.imread((String) ImageList.getItemAt(ImageList.getSelectedIndex()));
        ShowImageLabel.setIcon(new ImageIcon(toBufferedImage(image)));    
    }//GEN-LAST:event_ShowImageBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TemplateTestWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TemplateTestWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TemplateTestWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TemplateTestWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TemplateTestWindow().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(TemplateTestWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ImageList;
    private javax.swing.JButton ShowImageBtn;
    private javax.swing.JLabel ShowImageLabel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
